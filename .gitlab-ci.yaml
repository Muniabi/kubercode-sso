image: docker:latest

services:
  - docker:dind

stages:
  - build
#  - test
  - deploy

before_script:
  - apk add --no-cache curl bash jq sshpass

variables:
  DOCKER_DRIVER: overlay2
  SSH_USER: "root"
  SSH_SERVER: "92.53.105.243"  # IP или домен вашего сервера
  SSH_PASSWORD: "nb-*vioWTyK4K?"
  CI_REGISTRY_USER: "$CI_REGISTRY_USER"
  CI_REGISTRY_PASSWORD: "$CI_REGISTRY_PASSWORD"
  CI_REGISTRY: "$CI_REGISTRY"


build:
  only:
    - master
  stage: build
  only:
    - master
  script:
    - echo "Сборка Docker образа"
    - echo "$CI_REGISTRY_IMAGE:latest"
    - docker build -t $CI_REGISTRY_IMAGE/kubercode-sso:latest .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE/kubercode-sso:latest
  artifacts:
    paths:
      - build/
  parallel:
    matrix:
      - TEST: "test"

#test:
#  image: golang:1.22-alpine
#  stage: test
#  script:
#    - echo "Запуск юнит-тестов"
#    - go test ./...
#  parallel:
#    matrix:
#      - TEST: "build"


deploy:
 stage: deploy
 only:
   - master
 before_script:
   - apk add --no-cache openssh sshpass
 script:
   - echo $CI_REGISTRY_USER
   - echo $CI_REGISTRY
   - echo $CI_REGISTRY_PASSWORD
   - sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no "$SSH_USER@$SSH_SERVER" "
    echo '$CI_REGISTRY_PASSWORD' | docker login --username '$CI_REGISTRY_USER' --password-stdin '$CI_REGISTRY' &&
    cd /root/compose-env &&
    docker build -t compose-env-openresty:latest /root/compose-env/nginx/. &&
    docker compose pull &&
    docker compose up -d --no-build"